<?xml version="1.0" encoding="utf-8"?><doc>
  <assembly>
    <name>System.ServiceModel.Duplex</name>
  </assembly>
  <members>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1"></see> class with an object that implements the callback contract and a specified configuration and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress"></see> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="endpointConfigurationName">endpointConfigurationName</paramref> or <paramref name="remoteAddress">remoteAddress</paramref> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1"></see> class with specified instance context, binding, and remote address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"></see> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="binding">binding</paramref> or <paramref name="remoteAddress">remoteAddress</paramref> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1"></see> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"></see> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress"></see> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="binding">binding</paramref> or <paramref name="remoteAddress">remoteAddress</paramref> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1"></see> class with a context that implements the callback contract and a specified binding.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"></see> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="binding">binding</paramref> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1"></see> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="endpointConfigurationName">endpointConfigurationName</paramref> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <returns>A duplex channel of type <paramref name="TChannel">TChannel</paramref>, the generic parameter for the factory, between the client and service.</returns>
      <exception cref="T:System.InvalidOperationException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="callbackInstance">callbackInstance</paramref>.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress"></see> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri"></see> that contains the transport address to which the message is sent.</param>
      <returns>A duplex channel of type <paramref name="TChannel">TChannel</paramref>, the generic parameter for the factory, between the client and service.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="address">address</paramref> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress"></see> that provides the location of the service.</param>
      <returns>A duplex channel of type <paramref name="TChannel">TChannel</paramref>, the generic parameter for the factory, between the client and service.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="address">address</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="callbackInstance">callbackInstance</paramref>.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext"></see> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress"></see> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri"></see> that contains the transport address to which the message is sent.</param>
      <returns>A channel of type <paramref name="TChannel">TChannel</paramref>, the generic parameter for the factory, between the client and service.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="address">address</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException"><paramref name="callbackInstance">callbackInstance</paramref> or <paramref name="callbackInstance">callbackInstance</paramref>.UserObject is null.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Used to create a channel to a duplex service and associate that channel with a callback object.</summary>
      <typeparam name="TChannel">The type of the channel to be created.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1"></see> class using the specified callback object.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext"></see> object that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1"></see> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1"></see> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1"></see> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress"></param>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1"></see> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Represents the context information for a service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext"></see> class for a specified object that implements the service instance.</summary>
      <param name="implementation">The object that implements the service instance.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.DefaultCloseTimeout">
      <returns></returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.DefaultOpenTimeout">
      <returns></returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Extensions">
      <summary>Gets the extension collection, if any, associated with the service instance.</summary>
      <returns>The <see cref="System.ServiceModel.IExtensionCollection`1"></see> of type <see cref="System.ServiceModel.InstanceContext"></see> that contains the instance contexts for the extensions of the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance associated with this context is closed, but was not aborted.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance associated with this context is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Returns the instance of the service for the instance context in response to an incoming message.</summary>
      <param name="message">The incoming message that triggered the creation of a service object.</param>
      <returns>The object that represents the service instance.</returns>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnAbort">
      
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <param name="timeout"></param>
      <param name="callback"></param>
      <param name="state"></param>
      <returns></returns>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <param name="timeout"></param>
      <param name="callback"></param>
      <param name="state"></param>
      <returns></returns>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnClose(System.TimeSpan)">
      <param name="timeout"></param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnClosed">
      
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnEndClose(System.IAsyncResult)">
      <param name="result"></param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnEndOpen(System.IAsyncResult)">
      <param name="result"></param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnFaulted">
      
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnOpen(System.TimeSpan)">
      <param name="timeout"></param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnOpened">
      
    </member>
    <member name="M:System.ServiceModel.InstanceContext.OnOpening">
      
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Gets or sets the context used for thread synchronization with the current instance context.</summary>
      <returns>The <see cref="System.Threading.SynchronizationContext"></see> used for thread synchronization with the current instance context.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is opened or closing and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The communication object has been aborted and cannot be modified in these states.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.System#ServiceModel#IExtensibleObject{System#ServiceModel#InstanceContext}#Extensions">
      <returns></returns>
    </member>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Configures a callback service implementation in a client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CallbackBehaviorAttribute"></see> class.</summary>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a service closes a duplex session.</summary>
      <returns>true if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="System.Threading.SynchronizationContext"></see>; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the callback behavior.</summary>
      <param name="serviceEndpoint"></param>
      <param name="parameters">The collection of binding parameters that are configured.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Configures the client runtime to support the callback object.</summary>
      <param name="serviceEndpoint">The endpoint configured by the attribute.</param>
      <param name="clientRuntime"></param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"></see> method. This implementation has no effect.</summary>
      <param name="serviceEndpoint">The endpoint to be modified.</param>
      <param name="endpointDispatcher"></param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the endpoint description prior to building the runtime.</summary>
      <param name="serviceEndpoint">The endpoint to be validated.</param>
    </member>
  </members>
</doc>